<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    Profile
  </title>
  <!-- stylesheet -->
  <link rel="stylesheet" href="https://unpkg.com/@material-tailwind/html@latest/styles/material-tailwind.css" />

  <!-- script -->
  <link rel="stylesheet" href="tailwind.css">
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <!-- from node_modules -->

  <!-- from cdn -->
  <script src="https://unpkg.com/@material-tailwind/html@latest/scripts/dialog.js"></script>


  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f7f7f7;
      color: #333;
    }

    header {
      background-color: #4caf50;
      color: #fff;
      text-align: center;
      padding: 1rem;
    }

    section {
      /* max-width: 800px; */
      margin: 2rem;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h2 {
      color: #4caf50;
    }

    h1 {
      font-size: 2.5rem;
    }

    p {
      line-height: 1.6;
    }

    footer {
      background-color: #333;
      color: #fff;
      text-align: center;
      padding: 10px;
      position: fixed;
      bottom: 0;
      width: 100%;
    }

    .btn-orchids {
      width: 12rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 10px 20px;
      margin-bottom: 1rem;
      background-color: #4caf50;
      color: #fff;
      text-decoration: none;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1.2rem;
    }

    .btn-orchids:hover {
      background-color: #45a049;
    }

    /* .btn-actions {
			
		} */

    .btn-action:hover {
      background-color: rgb(34 197 94 / 0.3);
    }

    .btn-danger:hover {
      background-color: rgba(197, 34, 34, 0.3);
      color: red
    }

    .link-hover:hover {
      opacity: 0.7;
    }
  </style>
</head>

<body>
  <!-- <header>
    <h1>Orchids Flower Shop</h1>
  </header> -->
  <%- include('_header') %>
    <section class="bg-white">
      <div class="flex flex-col items-center">
        <div class="mt-4 w-1/2">
          <h1 class="pb-4">User's information</h1>
          <div class="flex flex-col gap-8 mb-1 justify-end pb-4">
            <div class="flex gap-4 items-center">
              <h6
                class="w-48 block font-sans text-base antialiased font-semibold leading-relaxed tracking-normal text-green-900">
                Username:
              </h6>
              <input type="hidden" id="id" name="id" value=<%=user.id%> >
              <div class="relative h-11 w-full min-w-[200px]">
                <input disabled placeholder="johndoe" type="text" id="username" name="username" required value=<%=user.username%>
                class="peer  h-full w-full rounded-md border-2 border-green-200 bg-gray-100 px-3 py-1 font-sans
                font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border
                placeholder-shown:border-green-200 placeholder-shown:border-t-blue-gray-200 focus:border-2
                focus:border-gray-900 disabled:border-0 disabled:bg-blue-gray-50" />
                <label
                  class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-green-200 before:transition-all before:content-none after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-green-200 after:transition-all after:content-none peer-placeholder-shown peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"></label>
              </div>
            </div>
            <div class="flex gap-4 items-center">
              <h6
                class="w-48 block font-sans text-base antialiased font-semibold leading-relaxed tracking-normal text-green-900 mt-4">
                Fullname:
              </h6>
              <div class="relative h-11 w-full min-w-[200px]">
                <input placeholder="John Doe" type="text" value=<%=user.name%> id="name" name="name" required
                class="peer h-full w-full rounded-md border-2 border-green-200 bg-transparent px-3 py-1 font-sans
                font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border
                placeholder-shown:border-green-200 placeholder-shown:border-t-blue-gray-200 focus:border-2
                focus:border-gray-900 disabled:border-0 disabled:bg-blue-gray-50" />
                <label
                  class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-green-200 before:transition-all before:content-none after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-green-200 after:transition-all after:content-none peer-placeholder-shown peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"></label>
              </div>
            </div>
            <div class="flex gap-4 items-center">
              <h6
                class="w-48 block font-sans text-base antialiased font-semibold leading-relaxed tracking-normal text-green-900 mt-4">
                Birthyear:
              </h6>
              <div class="relative h-11 w-full min-w-[200px]">
                <input placeholder="XXXX" type="text" id="YOB" name="YOB" value=<%= parseInt(user.YOB)%> required class="peer
                h-full w-full rounded-md border-2 border-green-200 bg-transparent px-3 py-1 font-sans
                font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border
                placeholder-shown:border-green-200 placeholder-shown:border-t-blue-gray-200 focus:border-2
                focus:border-gray-900 disabled:border-0 disabled:bg-blue-gray-50" />
                <label
                  class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-green-200 before:transition-all before:content-none after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-green-200 after:transition-all after:content-none peer-placeholder-shown peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"></label>
              </div>
            </div>
            <div class="flex gap-4 items-center">
              <h6
                class="w-40 block font-sans text-base antialiased font-semibold leading-relaxed tracking-normal text-green-900 mt-4">
                Role:
              </h6>
              <div class="text-2xl font-semibold">
                <%=user.isAdmin ? "Admin" : "User" %>
              </div>
            </div>
            <div class="flex justify-end">
              <button data-ripple-light="true" onclick="editUser()"
                class="middle none center rounded-lg bg-gradient-to-tr from-green-600 to-green-400 py-2   px-6 font-sans font-bold uppercase text-white shadow-md shadow-green-500/20 transition-all hover:shadow-lg hover:shadow-green-500/40 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none">
                Update
              </button>
            </div>
            <% if (typeof errors !='undefined' ) { %>
              <% errors.forEach(function (error){ %>
                <div class="alert alert-warning alert-dismissible" role="alert">
                  <%= error.msg %>
                </div>
                <% }); %>
                  <% } %>
          </div>
          <div class="flex flex-col gap-8 mb-1 justify-end pt-4 border-t-4">
            <h1>Update password</h1>
            <div class="flex gap-4 items-center">
              <h6
                class="block font-sans text-base antialiased font-semibold leading-relaxed tracking-normal text-green-900 mt-4 w-48">
                Password:
              </h6>
              <div class="relative h-11 w-full min-w-[200px]">
                <input placeholder="XXXXXXXXXX" type="password" id="password" name="password" required class="peer h-full w-full rounded-md border-2 border-green-200 bg-transparent px-3 py-1 font-sans
              font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border
              placeholder-shown:border-green-200 placeholder-shown:border-t-blue-gray-200 focus:border-2
              focus:border-gray-900 disabled:border-0 disabled:bg-blue-gray-50" />
                <label
                  class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-green-200 before:transition-all before:content-none after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-green-200 after:transition-all after:content-none peer-placeholder-shown peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"></label>
              </div>
            </div>
            <div class="flex gap-4 items-center">
              <h6
                class="block font-sans text-base antialiased font-semibold leading-relaxed tracking-normal text-green-900 mt-4 w-48">
                New password:
              </h6>
              <div class="relative h-11 w-full min-w-[200px]">
                <input placeholder="XXXXXXXXXX" type="password" id="newPassword" name="newPassword" required class="peer h-full w-full rounded-md border-2 border-green-200 bg-transparent px-3 py-1 font-sans
              font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border
              placeholder-shown:border-green-200 placeholder-shown:border-t-blue-gray-200 focus:border-2
              focus:border-gray-900 disabled:border-0 disabled:bg-blue-gray-50" />
                <label
                  class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-green-200 before:transition-all before:content-none after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-green-200 after:transition-all after:content-none peer-placeholder-shown peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"></label>
              </div>

            </div>
            <div class="flex justify-end">
              <button data-ripple-light="true" onclick="updatePassword()"
              class="middle none center rounded-lg bg-gradient-to-tr from-green-600 to-green-400 py-2   px-6 font-sans font-bold uppercase text-white shadow-md shadow-green-500/20 transition-all hover:shadow-lg hover:shadow-green-500/40 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none">
              Change password
            </button>
          </div>
          </div>
        </div>
      </div>
    </section>
    <footer>
      <p>&copy; 2024 Your Flower Shop. All rights reserved.</p>
    </footer>
    <script>

      function editUser() {
        const userConfirmed = window.confirm('Are you sure you want to edit this orchid?');
        if (!userConfirmed) return;
        const id = document.getElementById('id').value;
        const username = document.getElementById('username').value;
        // const password = document.getElementById('password').value;
        const name = document.getElementById('name').value;
        const YOB = document.getElementById('YOB').value;
        // if (password.length < 6) return window.alert('Password should have more than 6 characters')
        // if (YOB < 1900 || YOB > (new Date).getFullYear()) return window.alert('Invalid year of birth')

        const formData = {
          id,
          username,
          // password,
          name,
          YOB,
        };

        const xhr = new XMLHttpRequest();

        xhr.open('PUT', `https://localhost:5000/users/profile`, true);

        xhr.setRequestHeader('Content-Type', 'application/json');

        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 300) {
            console.log('Response:', xhr.responseText);
            window.location.href = "https://localhost:5000/users/profile";
          } else {
            alert(`Error: ${xhr.responseText}`)
            console.error('Error:', xhr.statusText);
          }
        };

        // Convert the formData object to JSON and send it in the request body
        const jsonData = JSON.stringify(formData);
        xhr.send(jsonData);
      }


      function updatePassword() {
        const userConfirmed = window.confirm('Are you sure you want to update password?');
        if (!userConfirmed) return;
        const id = document.getElementById('id').value;
        const password = document.getElementById('password').value;
        const newPassword = document.getElementById('newPassword').value;
        if (password.length < 6) return window.alert('Password should have more than 6 characters')
        if (newPassword.length < 6) return window.alert('Password should have more than 6 characters')
        const formData = {
          id,
          password,
          newPassword,
        };

        const xhr = new XMLHttpRequest();

        xhr.open('PUT', `https://localhost:5000/users/password`, true);

        xhr.setRequestHeader('Content-Type', 'application/json');

        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 300) {
            console.log('Response:', xhr.responseText);
            window.location.href = "https://localhost:5000/users/login";
          } else {
            alert(`Error: ${xhr.responseText}`)
            console.error('Error:', xhr.statusText);
          }
        };

        // Convert the formData object to JSON and send it in the request body
        const jsonData = JSON.stringify(formData);
        xhr.send(jsonData);
      }

      function deleteOrchid(id) {
        const userConfirmed = window.confirm('Are you sure you want to delete this orchid?');
        if (!userConfirmed) return;

        const xhr = new XMLHttpRequest();

        xhr.open('DELETE', `https://localhost:5000/orchids/${id}`, true);

        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 300) {
            console.log('Response:', xhr.responseText);
            window.location.href = "https://localhost:5000/orchids";
          } else {
            // If there was an error, call the error callback
            console.log('Error:', xhr.responseText);
            console.error('Error:', xhr.statusText);
          }
        };
        xhr.send();
      }
    </script>

    <script src="https://unpkg.com/@material-tailwind/html@latest/scripts/script-name.js"></script>
    <script src="https://unpkg.com/@material-tailwind/html@latest/scripts/dialog.js"></script>
    <script src="https://unpkg.com/@material-tailwind/html@latest/scripts/ripple.js"></script>

</body>

</html>